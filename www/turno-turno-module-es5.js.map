{"version":3,"sources":["webpack:///src/app/turno/turno.page.html","webpack:///src/app/model/Turno.ts","webpack:///src/app/turno/turno-routing.module.ts","webpack:///src/app/turno/turno.module.ts","webpack:///src/app/turno/turno.page.scss","webpack:///src/app/turno/turno.page.ts"],"names":["Turno","routes","path","component","TurnoPageRoutingModule","imports","forChild","exports","TurnoPageModule","declarations","TurnoPage","formBuilder","navCtrl","tService","loadingController","toastController","storage","turno","group","fecha","nombre","detalle","tipo","deviceId","get","then","val","controls","setValue","id","tur_fecha","value","tur_hora","tur_nombre","tur_detalle","tur_tipo","tur_estado","device_id","create","message","spinner","loading","color","duration","toast","present","saveTurno","subscribe","data","dismiss","navigateBack","error","back","selector","template"],"mappings":"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","file":"turno-turno-module-es5.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"primary\\\">\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-button (click)=\\\"navigateBack()\\\">\\n\\t\\t\\t\\t<ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n\\t\\t\\t</ion-button>\\n\\t\\t</ion-buttons>\\n\\t\\t<ion-title>Solicitar Turno</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"background\\\">\\n\\t<form [formGroup]=\\\"turno\\\" (ngSubmit)=\\\"saveTurno()\\\">\\n    <ion-item>\\n\\t\\t\\t<ion-label position=\\\"stacked\\\">Fecha:</ion-label>\\n\\t\\t\\t<ion-datetime cancelText=\\\"Cancelar\\\" doneText=\\\"Listo\\\" display-format=\\\"DD/MM/YYYY\\\" picker-format=\\\"DD/MM/YYYY\\\" formControlName=\\\"fecha\\\" required></ion-datetime>\\n\\t\\t</ion-item>\\n    <ion-item>\\n\\t\\t\\t<ion-label position=\\\"stacked\\\">Tipo de Turno:</ion-label>\\n\\t\\t\\t<ion-select value=\\\"URGENCIA\\\" okText=\\\"Listo\\\" cancelText=\\\"Cancelar\\\" formControlName=\\\"tipo\\\">\\n        \\t\\t<ion-select-option value=\\\"URGENCIA\\\">URGENCIA</ion-select-option>\\n        \\t\\t<ion-select-option value=\\\"PROGRAMADA\\\">PROGRAMADA</ion-select-option>\\n      \\t\\t</ion-select>\\n    </ion-item>\\n\\t\\t<ion-item>\\n\\t\\t\\t<ion-label position=\\\"stacked\\\">Nombre:</ion-label>\\n\\t\\t\\t<ion-input type=\\\"text\\\" formControlName=\\\"nombre\\\" required></ion-input>\\n\\t\\t</ion-item>\\n\\t\\t<ion-item>\\n\\t\\t\\t<ion-label position=\\\"stacked\\\">Descripci&oacute;n:</ion-label>\\n\\t\\t\\t<ion-textarea formControlName=\\\"detalle\\\" required></ion-textarea>\\n    </ion-item>\\n    <ion-button type=\\\"submit\\\" expand=\\\"full\\\" [disabled]=\\\"!turno.valid\\\">Solicitar</ion-button>\\n\\t</form>\\n</ion-content>\";","export class Turno {\n\ttur_id: number;\n    tur_fecha: string;\n    tur_hora: string;\n\ttur_nombre: string;\n    tur_detalle: string;\n\ttur_tipo: string;\n    tur_estado: string;\n    device_id: string\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TurnoPage } from './turno.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TurnoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TurnoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TurnoPageRoutingModule } from './turno-routing.module';\n\nimport { TurnoPage } from './turno.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TurnoPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [TurnoPage]\n})\nexport class TurnoPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3R1cm5vL3R1cm5vLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { AlertController, LoadingController, NavController, ToastController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { Turno } from '../model/Turno';\nimport { TurnosService } from '../services/turnos.service';\n\n@Component({\n  selector: 'app-turno',\n  templateUrl: './turno.page.html',\n  styleUrls: ['./turno.page.scss'],\n})\nexport class TurnoPage implements OnInit {\n\n  turno: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private navCtrl: NavController,\n    private tService: TurnosService, public loadingController: LoadingController, \n    public toastController: ToastController, public storage: Storage) {\n\t\tthis.turno = this.formBuilder.group({\n\t\t\tfecha: '',\n\t\t\tnombre: '',\n\t\t\tdetalle: '',\n\t\t\ttipo: '',\n\t\t\tdeviceId: ''\n\t\t});\n\n\t\tthis.storage.get('user').then((val) => {\n\t\t\tthis.turno.controls.nombre.setValue(val.nombre);\n\t\t\tthis.turno.controls.deviceId.setValue(val.id);\n\t\t});\n\n\t\tthis.storage.get('fecha').then((val) => {\n\t\t\tthis.turno.controls.fecha.setValue(val);\n\t\t});\n\n\t\tthis.storage.get('tipo').then((val) => {\n\t\t\tthis.turno.controls.tipo.setValue(val);\n\t\t});\n\t}\n\n\tngOnInit() {\n\t}\n\n\tasync saveTurno() {\n    let turno = new Turno();\n\t\tturno.tur_fecha = this.turno.controls.fecha.value;\n\t\tturno.tur_hora = \"\";\n\t\tturno.tur_nombre = this.turno.controls.nombre.value;\n    \tturno.tur_detalle = this.turno.controls.detalle.value;\n    \tturno.tur_tipo = this.turno.controls.tipo.value;\n\t\tturno.tur_estado = \"PENDIENTE\";\n\t\tturno.device_id = this.turno.controls.deviceId.value;\n\t\t\n\t\tlet loading = await this.loadingController.create({\n\t\t\tmessage: \"Espere...\",\n\t\t\tspinner: \"crescent\"\n\t\t});\n\n\t\tconst toast = await this.toastController.create({\n\t\t\tcolor: 'primary',\n\t\t\tmessage: 'Se registr√≥ el pedido! <br> En breve nos comunicaremos con usted.',\n\t\t\tduration: 2000\n\t\t  });\n\n\t\tawait loading.present();\n\t\tawait this.tService.saveTurno(turno).subscribe(data => {\n\t\t\ttoast.present();\n\t\t\tloading.dismiss();\n\t\t\tthis.navigateBack();\n\t\t}, error => {\n\t\t\tloading.dismiss();\n\t\t})\n\t}\n\n\tnavigateBack() {\n\t\tthis.navCtrl.back();\n\t}\n\n}\n"]}